package com.amazon.coral.spring.director.fj;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.context.ApplicationEvent;

/**
 * Logs the events generated by a ForkJoin.
 * 
 * @author Ovidiu Gheorghies
 */
public class ListenerLogger implements Listener {
    private static final Log log = LogFactory.getLog(ListenerLogger.class);

    public static final ListenerLogger INSTANCE = new ListenerLogger();

    @Override
    public void onBegin(ForkJoin forkJoin, ApplicationEvent event) {
        log.debug("BEGIN " + event);
    }

    @Override
    public void onEnd(ForkJoin forkJoin, ApplicationEvent event) {
        log.debug("END   " + event);
    }

    @Override
    public void onTick(ForkJoin forkJoin, ApplicationEvent event, long timeSinceStart) {
        log.debug(String.format("    TICK  %s %s", event.toString(), timeSinceStart));
    }

    @Override
    public void onSuccess(ForkJoin forkJoin, ApplicationEvent event, Object target) {
        log.debug(String.format("    DONE  %s %s", event.toString(), target.toString()));
    }

    @Override
    public void onException(ForkJoin forkJoin, ApplicationEvent event, Object target, Exception e) {
        log.warn(String.format("    EXCEPTION %s (will be dealt with by the ForkJoin on thread join) %s %s",
                event.toString(), target.toString(), e.getMessage()));
    }
}
